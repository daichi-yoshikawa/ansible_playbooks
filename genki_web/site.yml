---
- name: configure web server
  hosts: all
  vars:
    user: vagrant
    python_version: 3.7.6
    virtualenv_name: py376
    pyenv: ~/.pyenv/bin/pyenv
  tasks:
    - name: prepare installing docker
      become: yes
      apt:
        update_cache: yes
        install_recommends: no
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
    - name: add gpg key of the official docker repository
      become: yes
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    - name: add docker apt repository
      become: yes
      apt_repository:
        repo: 'deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable'
        state: present
    - name: install docker
      become: yes
      apt:
        update_cache: yes
        install_recommends: no
        name:
          - docker-ce

    - name: prepare python pyenv and virtualenv
      become: yes
      apt:
        update_cache: yes
        install_recommends: no
        name:
          - git
          - gcc
          - make
          - openssl
          - libssl-dev
          - libbz2-dev
          - libreadline-dev
          - libsqlite3-dev
          - zlib1g-dev
          - libffi-dev
    - name: git clone pyenv
      become: yes
      become_user: "{{ user }}"
      git:
        repo: https://github.com/yyuu/pyenv.git
        dest: .pyenv
    - name: make plugin directories of pyenv
      become: yes
      become_user: "{{ user }}"
      file:
        path: "{{ item }}"
        state: directory
      loop:
        - .pyenv/versions
        - .pyenv/shims
    - name: update .bashrc for pyenv
      become: yes
      become_user: "{{ user }}"
      blockinfile:
        path: .bashrc
        block: |
          export PYENV_ROOT=${HOME}/.pyenv
          if [ -d "${PYENV_ROOT}" ]; then
            export PATH=${PYENV_ROOT}/bin:$PATH
            eval "$(pyenv init -)"
          fi
#      notify: reflect update of bashrc
#    - name: reflect update of bashrc
#      become: yes
#      become_user: "{{ user }}"
#      shell: bash -lc ". ~/.bashrc"
    - name: git clone pyenv-virtualenv
      become: yes
      become_user: "{{ user }}"
      git:
        repo: https://github.com/yyuu/pyenv-virtualenv.git
        dest: .pyenv/plugins/pyenv-virtualenv
#    - name: check if required python is pyenv installed
#      become: yes
#      become_user: "{{ user }}"
#      shell: bash -lc "{{ pyenv }} versions | grep {{ python_version }}"
#      register: pyenv_versions_result
#      ignore_errors: yes
#      changed_when: False
#    - name: pyenv install python {{ python_version }}
#      shell: bash -lc "{{ pyenv }} install {{ python_version }}"
#      when: pyenv_versions_result.stdout == ""
#    - name: check if python virtualenv {{ virtualenv_name }} exists
#      shell: bash -lc '{{ pyenv }} virtualenvs | grep "{{ virtualenv_name }}\s(created\sfrom"'
#      register: pyenv_virtualenvs_result
#      ignore_errors: yes
#      changed_when: False
#    - name: pyenv virtualenv {{ virtualenv_name }}
#      shell: bash -lc "{{ pyenv }} virtualenv {{ python_version }} {{ virtualenv_name }}"
#      when: pyenv_virtualenvs_result.stdout == ""
#
#    - name: make work directory
#      become: yes
#      become_user: "{{ user }}"
#      file:
#        path: work
#        state: directory
